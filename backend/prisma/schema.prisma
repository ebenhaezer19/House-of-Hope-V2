// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Resident {
  id          Int       @id @default(autoincrement())
  name        String
  nik         String    @unique
  birthPlace  String
  birthDate   DateTime
  gender      String
  address     String
  phone       String?
  education   String
  schoolName  String
  grade       String?
  major       String?
  assistance  String
  details     String?
  status      String    @default("ACTIVE")
  roomId      Int
  room        Room      @relation(fields: [roomId], references: [id])
  documents   Document[]
  payments    Payment[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  exitDate    DateTime?
  alumniNotes String?
}

model Room {
  id        Int        @id @default(autoincrement())
  number    String     @unique
  capacity  Int
  residents Resident[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Document {
  id         Int      @id @default(autoincrement())
  name       String
  path       String
  type       String
  residentId Int
  resident   Resident @relation(fields: [residentId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Payment {
  id         Int      @id @default(autoincrement())
  amount     Float
  type       String
  status     String   @default("PENDING")
  date       DateTime @default(now())
  notes      String?
  residentId Int
  resident   Resident @relation(fields: [residentId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
