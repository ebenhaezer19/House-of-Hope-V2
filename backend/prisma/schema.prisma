generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  password        String
  name            String
  role            Role      @default(USER)
  resetToken      String?
  resetTokenExpiry DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

enum Role {
  USER
  ADMIN
}

model Room {
  id          Int        @id @default(autoincrement())
  number      String     @unique
  type        RoomType
  capacity    Int
  floor       Int
  description String?
  residents   Resident[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

enum RoomType {
  WARD
}

model Resident {
  id          Int      @id @default(autoincrement())
  name        String
  nik         String   @unique
  birthPlace  String
  birthDate   String?
  gender      Gender
  address     String
  phone       String?
  education   Education
  schoolName  String
  grade       String?
  major       String?
  assistance  AssistanceType
  details     String?
  room        Room     @relation(fields: [roomId], references: [id])
  roomId      Int
  documents   Document[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  status      String    @default("ACTIVE")
  exitDate    DateTime?
  alumniNotes String?
}

model Document {
  id          Int      @id @default(autoincrement())
  name        String
  path        String
  type        String
  resident    Resident @relation(fields: [residentId], references: [id])
  residentId  Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Gender {
  MALE
  FEMALE
}

enum Education {
  TK
  SD
  SMP
  SMA
  KULIAH
  MAGANG
}

enum AssistanceType {
  YAYASAN
  DIAKONIA
}

// ... model lainnya 